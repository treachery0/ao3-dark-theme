/*==INTERACTIONS: global form rules
http://otwcode.github.com/docs/front_end_coding/patterns/interactions
(submit button styling is in actions.css with the other buttons)
General rules for all form elements, and nearly ALL our forms use just these.
Forms are normally in definition lists <dt label: dd input>
with some un/ordered lists, normally of checkbox options <li checkbox:label>
and some paragraphs, normally forms with a single <p label:input> .

We might develop three MODES: .simple .verbose and .dynamic -- .sim and ver in early draft in sandbox
We also have some jS WIDGETS, which are custom form interactions, like autocomplete
and a few variations for INTERACTION TYPES, which are, roughly:
.post, .login, make .associations, set .preferences, [.search, .filter] => in searchbrowse
*/

form {
    clear: right;
}

/* wrap long text in Opera, Safari, and Chrome */
fieldset {
    min-width: 0;
}

/*Guideline: Forms are written by lots of people, and, this is beta, change a LOT.
I've written a load of possible different nests to give a reasonably/broadly consistent view whatever goes in,
but it's probably not complete. */

fieldset, form dl, fieldset dl dl, fieldset fieldset fieldset, fieldset fieldset dl dl, dd.hideme, form blockquote.userstuff {
    display: block;
    background: var(--background-light);
    margin: density(6);
    padding: density(6);
}

fieldset dl, fieldset.actions, fieldset dl fieldset dl {
    background: transparent;
    border: none;
    clear: right;
}

fieldset fieldset, fieldset dl dl, form blockquote.userstuff {
    background: var(--background);
    clear: right;
}

fieldset dd dl, form .meta dd, fieldset dl fieldset dl, dd fieldset {
    margin: density(6, 0);
}

/*end nesting */

legend, input[type="hidden"] {
    height: 0;
    width: 0;
    font-size: 0;
    opacity: 0;
    padding: 0;
    margin: 0;
}

label {
    margin-right: density(3);
}

input, textarea {
    font-family: var(--font-sans);
    width: 100%;
    border: 1px solid var(--foreground);
    color: var(--foreground);
    border-radius: round(2);
    padding: density(2);
    background: transparent;
}

textarea {
    min-height: 12em;
}

textarea.large {
    height: 36em;
}

input:focus, select:focus, textarea:focus {
    outline-offset: 1px;
    outline: 1px solid var(--secondary);
}

input[type="radio"] + label, input[type="checkbox"] + label {
    padding-left: 1em;
}

select {
    color: var(--foreground);
    background: transparent;
    border: 1px solid var(--foreground);
    border-radius: round(2);
    padding: density(2);
    vertical-align: text-top;
    width: 100%;
    min-width: 10.5em;
}

.datetime select {
    width: 32.5%;
}

input[type="radio"], input[type="checkbox"], input[type="file"], input.number, p input, p select, .heading select, li select {
    width: auto;
    margin-right: density(3);
}

input.number {
    width: 4em;
}

option, .actions option, form code {
    display: block;
}

form p {
    clear: right;
    margin: auto;
    padding: density(6);
}

form dt {
    float: left;
    clear: left;
    min-width: 10.5em;
    width: 25%;
    padding: density(2, 4, 0, 0);
    border-bottom: 1px solid var(--foreground);
}

form dd, form dd.any {
    float: left;
    width: 72.5%;
}

form dd.any {
    margin-left: 25%;
}

form dd + dd {
    width: 97.5%;
    margin-left: density(4);
}

form dd.required {
    color: var(--foreground-dark);
}

form .footnote code {
    display: inline;
}

/* when we display information that cannot be edited,
like the current username on the change username form */
form dd p.informational {
    padding-top: 0;
}

/*END FORM RULES*/

/* WIDGET: DEPENDENT OPTIONS */
.toggle_formfield ~ ul.dependent {
    margin-left: density(21);
}

/* WIDGET: CHARACTER COUNTER (todo: ARIA live region POLITE)*/

p.character_counter {
    font-size: 87.5%;
    text-align: right;
}

.comment .character_counter {
    float: left;
}

/* WIDGET: LIVE VALIDATION (todo: ARIA live region)
We only use error messages for LiveValidation. Style spoofs the system error message. If we ever set a default success message, this will need updating. */

.LV_validation_message {
    font-weight: 900;
    position: absolute;
    margin-top: density(6);
    margin-right: 15em;
    z-index: 1;
}

.LV_invalid {
    background: var(--background-light);
    border: 1px solid var(--error);
    color: var(--error);
    padding: density(2, 3);
    border-radius: round(2);
}

.LV_invalid_field, input.LV_invalid_field:hover, input.LV_invalid_field:active, textarea.LV_invalid_field:hover, textarea.LV_invalid_field:active {
    border: 1px solid var(--error);
}

.LV_invalid:before {
    border-color: var(--error) transparent;
    border-style: solid;
    border-width: 0 0.643em 0.643em;
    content: "";
    left: 0.875em;
    position: absolute;
    top: -0.643em;
}

/* WIDGET: AUTO COMPLETE */

.autocomplete div.dropdown ul {
    background: var(--background);
    padding: density(1);
    border: 1px solid var(--foreground-transparent);
    line-height: 1.286;
    display: block;
}

.autocomplete ul li {
    padding: density(1);
    margin: density(2, auto, auto);
}

.autocomplete input, .autocomplete .dropdown ul li {
    display: block;
    min-width: 10em;
}

.autocomplete .dropdown ul li {
    margin: density(2, 0, 0);
}

form li ul.autocomplete li.input {
    border: 0;
}

.autocomplete .dropdown ul li:hover, .autocomplete .dropdown li.selected {
    background: var(--background-light);
}

.autocomplete {
    .notice {
        margin-top: 0 !important;
    }

    input {
        margin-top: density(4);
    }

    li.added {
        border-radius: round(2);
        background: var(--foreground-transparent);
        color: var(--foreground-light);
        margin: density(2);
        padding: density(0, 2, 0, 6);
    }
}

/* WIDGET: SORTABLE LIST (note: hope to merge with .sortable and .draggable etc)*/

.ui-sortable li {
    background: var(--background-light);
    border: 2px solid var(--foreground);
    float: left;
    width: 100%;
    clear: both;
}

.ui-sortable li:hover {
    background: var(--background-light);
    border: 2px solid var(--foreground);
    cursor: move;
}

.ui-sortable input {
    margin: density(4, 0, 2, 2);
}

.ui-sortable .heading {
    display: inline-block;
}

.ui-sortable ul.actions li {
    float: none;
    background: transparent;
    border: none;
}

.ui-draggable form {
    cursor: move;
}

.ui-draggable a {
    cursor: default;
}

/* WIDGET: DATEPICKER, TIMEPICKER (todo, requires ARIA managed focus) */

#ui-datepicker-div {
    background: var(--background-light);
    display: none;
    overflow: hidden;
    padding: density(6);
    font-size: 87.5%;
}

.ui-datepicker dt, .ui-datepicker dd, .ui-datepicker-buttonpane, .ui-timepicker-div, a.ui-datepicker-prev {
    float: left;
}

.ui-datepicker button {
    height: 2em;
}

.ui-datepicker dt {
    clear: left;
    width: 5em;
    margin: density(2, 0);
}

.ui-datepicker dd {
    margin: density(2, 0);
}

.ui-datepicker table {
    background: var(--background);
}

.ui-datepicker td {
    border: 1px solid var(--foreground);
}

.ui-datepicker tr:hover {
    background: var(--background-light);
}

.ui-datepicker td:hover {
    background: var(--background-light);
}

.ui-datepicker td a {
    border-bottom: none;
}

a.ui-datepicker-next {
    float: right;
}

.ui-datepicker-title {
    clear: both;
    text-align: center;
}

.ui-datepicker-buttonpane {
    clear: left;
}

.ui-timepicker-div dl {
    float: left;
    margin: density(6, 0);
}

.ui_tpicker_hour_label, .ui_tpicker_minute_label {
    padding-top: density(2);
    height: 1.45em;
}

/*WIDGET: TOOLTIP (todo, requires graceful degradation testing, can't see any reason for this jS)
qTip2 Copyright 2009-2010 Craig Michael Thompson - http://craigsworks.com*/

.qtip {
    position: absolute;
    left: -28000px;
    top: -28000px;
    display: none;
    max-width: 22em;
    min-width: 6em;
    font-size: 0.625em;
    z-index: 15000;
}

.qtip-content {
    position: relative;
    padding: density(2);
    background: var(--background-light);
    border: 1px solid var(--foreground);
    overflow: hidden;
    word-wrap: break-word;
}

/* WIDGET: MODAL DIALOGS (called by help links) */

a.modal.help {
    cursor: help;
}

#modal-bg, #modal-wrap {
    display: none;
    height: 100%;
    left: 0;
    top: 0;
}

#modal-bg {
    background: rgba(0, 0, 0, 0.7);
    position: fixed;
    width: 100%;
    z-index: 499;
}

#modal-bg .loading {
    background: url(/images/indicator.gif) no-repeat center center;
    height: 124px;
    left: 50%;
    margin: -62px 0 0 -62px;
    position: absolute;
    top: 50%;
    width: 124px;
}

#modal-wrap {
    display: none;
    position: absolute;
    right: 0;
    text-align: center;
    z-index: 500;
}

#modal-wrap:before {
    content: '';
    height: 100%;
}

#modal-wrap:before, #modal {
    display: inline-block;
    vertical-align: middle;
}

#modal {
    background: var(--background);
    border: 1px solid var(--foreground);
    margin: 3% 0;
    max-width: 800px;
    min-width: 200px;
    padding-bottom: 44px;
    position: relative;
    text-align: left;
    width: 80%;
    z-index: 501;

    .content {
        border-bottom: 1px solid var(--foreground-dark);
        font-size: 0.875em;
        overflow: auto;
        padding: density(12);
    }
}

#modal.tall {
    height: 80%;
    max-height: 720px;

    .content {
        bottom: 44px;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
    }
}

#modal.tall.img {
    min-width: 0;
    width: auto;
}

#modal.img {
    background: transparent;
    border: 0;
    margin: 0 0 44px;
    max-height: none;
    max-width: 90%;
    min-width: 0;
    padding: 0;
    width: auto;

    a {
        border: 0;
        color: var(--foreground-light);
    }
}

#modal.img.tall {
    height: 90%;
    width: auto;
}

#modal.img .content {
    border: 0;
    overflow: visible;
    padding: 0;
    text-align: center;
}

#modal.img.tall .content {
    height: 100%;
    position: relative;
    width: auto;
}

#modal.img .content img {
    border: 1px solid rgba(0, 0, 0, 0.5);
    max-height: 100%;
    max-width: 100%;
}

#modal .footer {
    bottom: 0;
    height: 44px;
    left: 0;
    line-height: 44px;
    padding: density(0, 5);
    right: 0;
    position: absolute;
}

#modal.img .footer {
    position: fixed;
    text-align: center;
}

#modal .footer .action.modal-closer {
    bottom: 8px;
    position: absolute;
    right: 8px;
}

#modal .content > h1:first-child, #modal .content > h2:first-child, #modal .content > .heading:first-child {
    margin-top: density(4);
}

/*MODE: DYNAMIC is in early dev and so currently sharing styles with toggled */

div.dynamic {
    background: var(--background-light);
    position: absolute;
    z-index: 500;
}

/*MODE: VERBOSE for forms with more than three fieldsets
TO DO: Make VERBOSE a class on FORM across the site; it is a surrounding DIV
in some areas, hence .verbose form */

form.verbose legend, .verbose form legend {
    height: auto;
    width: auto;
    font-size: 100%;
    background: var(--background-light);
    border: 1px solid var(--foreground);
    padding: density(4);
    opacity: 1;
}

/*MODE: SIMPLE for forms with three or fewer fieldsets (default) */

form.simple span.actions {
    float: none;
}

.simple input[type="submit"] {
    margin: 0;
}

/* mods: SINGLE for prominent simple forms consisting of one text input, e.g., on the blocked user page */

form.single fieldset {
    background: transparent;
    border: 1px solid var(--foreground);
}

form.single legend {
    height: auto;
    width: auto;
    font-size: 1.143em;
    font-weight: bold;
    padding: density(4);
    opacity: 1;
}

form.single input[type="text"] {
    min-width: 15em;
}

form.single input[type="submit"] {
    vertical-align: bottom;
}

form.single span.submit {
    padding: 0;
}

form.single ul.autocomplete {
    display: inline-block;
}

form.single .autocomplete li.input {
    margin: density(0, 6, 2, 0);
}

form.single .autocomplete .added {
    margin-bottom: density(1);
}

/* let autocomplete input expand horizontally as the container takes up more room to accomodate multiple selected tokens */
form.single .autocomplete input[type="text"] {
    width: 100%;
}

/* tweak the margin of the submit button only if there's an autocomplete */
form.single .autocomplete + input + span.submit input[type="submit"] {
    margin-bottom: density(1);
}

/* WIDGET: TOGGLED FORMS (SHOW/HIDE bookmark and collection - hidden with jS) */

.toggled form dd, .dynamic form dd {
    width: 99%;
}

.toggled form p.footnote, .dynamic form p.footnote {
    float: none;
    margin: auto;
    padding: 0;
    line-height: 0.5;
}

.toggled form, .dynamic form {
    padding: density(4);
    background: var(--background-light);
}

.dynamic form fieldset, .toggled form fieldset, .toggled form dl, .secondary .toggled form, .secondary form {
    border: none;
    background: transparent;
    margin: 0;
    padding: 0;
}

.toggled .bookmark form p.footnote {
    padding-bottom: density(6);
}

/*INTERACTION: LOGIN SIGNUP*/

/*INTERACTION: POST (work, chapter, comment, news, feedback, challenge etc) */

.post .required .warnings, dd.required {
    font-weight: normal;
    color: var(--foreground);
}

.post .text textarea {
    clear: right;
}

/* CONTEXT: dashboard*/

.dashboard > form {
    float: left;
    width: 100%;
    clear: none;
}

.dashboard fieldset {
    clear: right;
}

.dashboard form dt.landmark {
    clear: both;
}